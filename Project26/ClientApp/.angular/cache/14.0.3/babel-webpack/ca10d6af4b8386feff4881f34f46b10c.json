{"ast":null,"code":"import _defineProperty from \"C:/Users/\\u0412\\u043B\\u0430\\u0434/source/repos/Project26/Project26/ClientApp/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\n/*!\n * Chart.js v4.3.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n\n        this._notify(chart, anims, date, 'complete');\n\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n\n    return anims;\n  }\n\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n\n    this._getAnims(chart).items.push(...items);\n  }\n\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  start(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims) {\n      return;\n    }\n\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n\n    return true;\n  }\n\n  stop(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.items.length) {\n      return;\n    }\n\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n\n    anims.items = [];\n\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n\n}\n\nvar animator = /* #__PURE__ */new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n\n};\n\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || elapsed < duration);\n\n    if (!this._active) {\n      this._target[prop] = to;\n\n      this._notify(true);\n\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n\n}\n\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n\n      if (!isObject(cfg)) {\n        return;\n      }\n\n      const resolved = {};\n\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n\n    return animations;\n  }\n\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n\n    return animations;\n  }\n\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  let options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n\n    delete stacks[axis][datasetIndex];\n\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\n\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\n\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked && {\n  keys: getSortedDatasetIndices(chart, true),\n  values: null\n};\n\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  _destroy() {\n    const meta = this._cachedMeta;\n\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    this._resyncElements(resetNewElements);\n\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  parse(start, count) {\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = this;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n\n          prev = cur;\n        }\n      }\n\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n\n    return parsed;\n  }\n\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n\n    const otherScale = this._getOtherScale(scale);\n\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n\n      if (sorted) {\n        break;\n      }\n    }\n\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n\n    return values;\n  }\n\n  getMaxOverflow() {\n    return false;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  update(mode) {}\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || elements.length - start;\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n\n      if (element.hidden) {\n        continue;\n      }\n\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n\n    const context = () => this.getContext(index, active, mode);\n\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n\n    if (cached) {\n      return cached;\n    }\n\n    let options;\n\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n\n    const animations = new Animations(chart, options && options.animations);\n\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {\n      sharedOptions,\n      includeOptions\n    };\n  }\n\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = arr => {\n      arr.length += count;\n\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {}\n\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n\n    meta.data.splice(start, count);\n  }\n\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n\n    const newCount = arguments.length - 2;\n\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n\n}\n\n_defineProperty(DatasetController, \"defaults\", {});\n\n_defineProperty(DatasetController, \"datasetElementType\", null);\n\n_defineProperty(DatasetController, \"dataElementType\", null);\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n\n  return {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  };\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {\n      top: true,\n      right: true,\n      bottom: true,\n      left: true\n    };\n    return;\n  }\n\n  const {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  } = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {\n  inflateAmount\n}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\n\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n\n    return parsed;\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  getMaxOverflow() {\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      index,\n      _cachedMeta: {\n        vScale\n      }\n    } = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n\n    const ruler = this._getRuler();\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : this._calculateBarValuePixels(i);\n\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  _getStacks(last, dataIndex) {\n    const {\n      iScale\n    } = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type).filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = meta => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n        stacks.push(meta.stack);\n      }\n\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  _calculateBarValuePixels(index) {\n    const {\n      _cachedMeta: {\n        vScale,\n        _stacked,\n        index: datasetIndex\n      },\n      options: {\n        base: baseValue,\n        minBarLength\n      }\n    } = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n\n_defineProperty(BarController, \"id\", 'bar');\n\n_defineProperty(BarController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n});\n\n_defineProperty(BarController, \"overrides\", {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n});\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n\n    return parsed;\n  }\n\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n\n    return max > 0 && max;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = this._cachedMeta;\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n\n    const radius = values.radius;\n\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n\n}\n\n_defineProperty(BubbleController, \"id\", 'bubble');\n\n_defineProperty(BubbleController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n});\n\n_defineProperty(BubbleController, \"overrides\", {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n});\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\n\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = i => +data[i];\n\n      if (isObject(data[start])) {\n        const {\n          key = 'value'\n        } = this._parsing;\n\n        getter = i => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n\n        const rotation = controller._getRotation();\n\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n\n  update(mode) {\n    const chart = this.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n\n    const chartWeight = this._getRingWeight(this.index);\n\n    const {\n      circumference,\n      rotation\n    } = this._getRotationExtents();\n\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n\n    const circumference = this._getCircumference();\n\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    let startAngle = this._getRotation();\n\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n\n    return max;\n  }\n\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n\n}\n\n_defineProperty(DoughnutController, \"id\", 'doughnut');\n\n_defineProperty(DoughnutController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n});\n\n_defineProperty(DoughnutController, \"descriptors\", {\n  _scriptable: name => name !== 'spacing',\n  _indexable: name => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n});\n\n_defineProperty(DoughnutController, \"overrides\", {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle,\n                color\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                fontColor: color,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    }\n  }\n});\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n\n    let {\n      start,\n      count\n    } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked,\n      _dataset\n    } = this._cachedMeta;\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {\n      spanGaps,\n      segment\n    } = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n\n}\n\n_defineProperty(LineController, \"id\", 'line');\n\n_defineProperty(LineController, \"defaults\", {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n});\n\n_defineProperty(LineController, \"overrides\", {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n});\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - radiusLength * this.index;\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n\n}\n\n_defineProperty(PolarAreaController, \"id\", 'polarArea');\n\n_defineProperty(PolarAreaController, \"defaults\", {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n});\n\n_defineProperty(PolarAreaController, \"overrides\", {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle,\n                color\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                fontColor: color,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n});\n\nclass PieController extends DoughnutController {}\n\n_defineProperty(PieController, \"id\", 'pie');\n\n_defineProperty(PieController, \"defaults\", {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n});\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n}\n\n_defineProperty(RadarController, \"id\", 'radar');\n\n_defineProperty(RadarController, \"defaults\", {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n});\n\n_defineProperty(RadarController, \"overrides\", {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n});\n\nclass ScatterController extends DatasetController {\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      data: points = []\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n\n    let {\n      start,\n      count\n    } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n      const {\n        dataset: line,\n        _dataset\n      } = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {\n      showLine\n    } = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked,\n      _dataset\n    } = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {\n      spanGaps,\n      segment\n    } = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n}\n\n_defineProperty(ScatterController, \"id\", 'scatter');\n\n_defineProperty(ScatterController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n});\n\n_defineProperty(ScatterController, \"overrides\", {\n  interaction: {\n    mode: 'point'\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n});\n\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PieController: PieController,\n  PolarAreaController: PolarAreaController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\n\n\nclass DateAdapterBase {\n  /**\n  * Override default date adapter methods.\n  * Accepts type parameter to define options type.\n  * @example\n  * Chart._adapters._date.override<{myAdapterOption: string}>({\n  *   init() {\n  *     console.log(this.options.myAdapterOption);\n  *   }\n  * })\n  */\n  static override(members) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  constructor(options) {\n    _defineProperty(this, \"options\", void 0);\n\n    this.options = options || {};\n  } // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n\n  init() {}\n\n  formats() {\n    return abstract();\n  }\n\n  parse() {\n    return abstract();\n  }\n\n  format() {\n    return abstract();\n  }\n\n  add() {\n    return abstract();\n  }\n\n  diff() {\n    return abstract();\n  }\n\n  startOf() {\n    return abstract();\n  }\n\n  endOf() {\n    return abstract();\n  }\n\n}\n\nvar adapters = {\n  _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {\n      startAngle,\n      endAngle\n    } = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {\n      angle\n    } = getAngleFromPoint(element, {\n      x: position.x,\n      y: position.y\n    });\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({\n      position: pos,\n      options: {\n        stack,\n        stackWeight = 1\n      }\n    } = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n\n  for (const wrap of layouts) {\n    const {\n      stack,\n      pos,\n      stackWeight\n    } = wrap;\n\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n\n    const _stack = stacks[stack] || (stacks[stack] = {\n      count: 0,\n      placed: 0,\n      weight: 0,\n      size: 0\n    });\n\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n\n  return stacks;\n}\n\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {\n    vBoxMaxWidth,\n    hBoxMaxHeight\n  } = params;\n  let i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {\n      fullSize\n    } = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {\n    pos,\n    box\n  } = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n\n    const stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {\n    x,\n    y\n  } = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {\n      count: 1,\n      placed: 0,\n      weight: 1\n    };\n    const weight = layout.stackWeight / stack.weight || 1;\n\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n\n  releaseContext(context) {\n    return false;\n  }\n\n  addEventListener(chart, type, listener) {}\n\n  removeEventListener(chart, type, listener) {}\n\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  isAttached(canvas) {\n    return true;\n  }\n\n  updateConfig(config) {}\n\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  releaseContext(context) {\n    const canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n\n    return !!(container && container.isConnected);\n  }\n\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    _defineProperty(this, \"x\", void 0);\n\n    _defineProperty(this, \"y\", void 0);\n\n    _defineProperty(this, \"active\", false);\n\n    _defineProperty(this, \"options\", void 0);\n\n    _defineProperty(this, \"$animations\", void 0);\n  }\n\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  getProps(props, final) {\n    const anims = this.$animations;\n\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this;\n    }\n\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n\n}\n\n_defineProperty(Element, \"defaults\", {});\n\n_defineProperty(Element, \"defaultRoutes\", undefined);\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n\n  const tickLength = scale._tickSize();\n\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right,\n    chart\n  } = scale;\n  const {\n    chartArea,\n    scales\n  } = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\n\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  parse(raw, index) {\n    return raw;\n  }\n\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n\n  getMinMax(canStack) {\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  getTicks() {\n    return this.ticks;\n  }\n\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n\n    return items;\n  }\n\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    const {\n      beginAtZero,\n      grace,\n      ticks: tickOpts\n    } = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n\n  determineDataLimits() {}\n\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n\n  buildTicks() {\n    return [];\n  }\n\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n\n  afterAutoSkip() {}\n\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = this;\n\n    const display = this._isVisible();\n\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      if (tickOpts.display && this.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = this._getLabelSizes();\n\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n\n  getLabelForValue(value) {\n    return value;\n  }\n\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n\n  getValueForPixel(pixel) {}\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n\n    return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {\n      grid,\n      position,\n      border\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n\n        if (mirror) {\n          textOffset *= -1;\n        }\n\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += lineHeight / 2 * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n\n          case 'bottom':\n            top -= height;\n            break;\n        }\n\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n\n          case 'right':\n            left -= width;\n            break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {\n      position,\n      ticks\n    } = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = this.options;\n\n    const labelSizes = this._getLabelSizes();\n\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {\n      textAlign,\n      x\n    };\n  }\n\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: this.left,\n        bottom: chart.height,\n        right: this.right\n      };\n    }\n\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: this.top,\n        left: 0,\n        bottom: this.bottom,\n        right: chart.width\n      };\n    }\n  }\n\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n\n    return 0;\n  }\n\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n\n  drawBorder() {\n    const {\n      chart,\n      ctx,\n      options: {\n        border,\n        grid\n      }\n    } = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n\n    if (!axisWidth) {\n      return;\n    }\n\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: chartArea => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: chartArea => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: chartArea => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  get(id) {\n    return this.items[id];\n  }\n\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n\n      if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n\n    return this.plugins;\n  }\n\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n\n    return item;\n  }\n\n}\n\nvar registry = /* #__PURE__ */new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n\n      this._notify(this._init, chart, 'uninstall');\n    }\n\n    return result;\n  }\n\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n\n}\n\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {\n    plugins,\n    localIds\n  };\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, {\n  plugins,\n  localIds\n}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n\n    if (opts === null) {\n      continue;\n    }\n\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {\n        plugin,\n        local: localIds[id]\n      }, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {\n  plugin,\n  local\n}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n\n  for (const opts of scaleOptions) {\n    const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n\n    if (axis) {\n      return axis;\n    }\n  }\n\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {\n      axis\n    };\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter(d => d.xAxisID === id || d.yAxisID === id);\n\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n\n    this._resolverCache.clear();\n  }\n\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n\n    let cache = _scopeCache.get(mainScope);\n\n    if (!cache || resetCache) {\n      cache = new Map();\n\n      _scopeCache.set(mainScope, cache);\n    }\n\n    return cache;\n  }\n\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n\n    const cache = this._cachedScopes(mainScope, resetCache);\n\n    const cached = cache.get(keyLists);\n\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n\n    return array;\n  }\n\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n\n    return result;\n  }\n\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nconst hasFunction = value => isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n\n    if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar version = \"4.3.0\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nconst instances = {};\n\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n\n  for (const key of keys) {\n    const intKey = +key;\n\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n\n  if (isClick) {\n    return lastEvent;\n  }\n\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {\n    xScale,\n    yScale\n  } = meta;\n\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n\n      metasets.splice(numData, numMeta - numData);\n    }\n\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  _removeUnreferencedMetasets() {\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = this;\n\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n\n        meta = this.getDatasetMeta(i);\n      }\n\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n\n    return newControllers;\n  }\n\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  reset() {\n    this._resetElements();\n\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n\n    this._checkEventBindings();\n\n    this._updateHiddenIndices();\n\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n\n    this._updateLayout(minPadding);\n\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    this.notifyPlugins('afterUpdate', {\n      mode\n    });\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    const {\n      _active,\n      _lastEvent\n    } = this;\n\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  _updateScales() {\n    each(this.scales, scale => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  _updateHiddenIndices() {\n    const {\n      _hiddenIndices\n    } = this;\n    const changes = this._getUniformDataChanges() || [];\n\n    for (const {\n      method,\n      start,\n      count\n    } of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n\n    const makeSet = idx => new Set(_dataChanges.filter(c => c[0] === idx).map((c, i) => i + ',' + c.splice(1).join(',')));\n\n    const changeSet = makeSet(0);\n\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n\n    return Array.from(changeSet).map(c => c.split(',')).map(a => ({\n      method: a[1],\n      start: +a[2],\n      count: +a[3]\n    }));\n  }\n\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n\n      if (box.configure) {\n        box.configure();\n      }\n\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({\n        chart: this\n      });\n    }\n  }\n\n  draw() {\n    let i;\n\n    if (this._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = this._resizeBeforeDraw;\n\n      this._resize(width, height);\n\n      this._resizeBeforeDraw = null;\n    }\n\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const layers = this._layers;\n\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {\n      chart: this,\n      type: 'chart'\n    }));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible\n      });\n      this.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {\n      canvas,\n      ctx\n    } = this;\n\n    this._stop();\n\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  bindEvents() {\n    this.bindUserEvents();\n\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, type => _add(type, listener));\n  }\n\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached;\n\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      this._stop();\n\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  _handleEvent(e, replay, inChartArea) {\n    const {\n      _active: lastActive = [],\n      options\n    } = this;\n    const useFinalPosition = replay;\n\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n\n    const isClick = _isClickEvent(e);\n\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed || replay) {\n      this._active = active;\n\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n\n}\n\n_defineProperty(Chart, \"defaults\", defaults);\n\n_defineProperty(Chart, \"instances\", instances);\n\n_defineProperty(Chart, \"overrides\", overrides);\n\n_defineProperty(Chart, \"registry\", registry);\n\n_defineProperty(Chart, \"version\", version);\n\n_defineProperty(Chart, \"getChart\", getChart);\n\nfunction invalidatePlugins() {\n  return each(Chart.instances, chart => chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius; // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n/**\n * Parse border radius from the provided options\n */\n\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2); // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */\n\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\n\n\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle); // The corner segment from point 2 to point 3\n\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    } // The line from point 3 to point 4\n\n\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y); // The corner segment from point 4 to point 5\n\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    } // The inner arc from point 5 to point b to point 6\n\n\n    const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true); // The corner segment from point 6 to point 7\n\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    } // The line from point 7 to point 8\n\n\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y); // The corner segment from point 8 to point 1\n\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference,\n    options\n  } = element;\n  const {\n    borderWidth,\n    borderJoinStyle,\n    borderDash,\n    borderDashOffset\n  } = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n\n    _defineProperty(this, \"circumference\", void 0);\n\n    _defineProperty(this, \"endAngle\", void 0);\n\n    _defineProperty(this, \"fullCircles\", void 0);\n\n    _defineProperty(this, \"innerRadius\", void 0);\n\n    _defineProperty(this, \"outerRadius\", void 0);\n\n    _defineProperty(this, \"pixelMargin\", void 0);\n\n    _defineProperty(this, \"startAngle\", void 0);\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return betweenAngles && withinRadius;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius'], useFinalPosition);\n    const {\n      offset,\n      spacing\n    } = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {\n      options,\n      circumference\n    } = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n    ctx.restore();\n  }\n\n}\n\n_defineProperty(ArcElement, \"id\", 'arc');\n\n_defineProperty(ArcElement, \"defaults\", {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true\n});\n\n_defineProperty(ArcElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor'\n});\n\n_defineProperty(ArcElement, \"descriptors\", {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash'\n});\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n\n    const segments = _boundSegments(this, {\n      property,\n      start: value,\n      end: value\n    });\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n\n    const _interpolate = _getInterpolationMethod(options);\n\n    let i, ilen;\n\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n\n    return result.length === 1 ? result[0] : result;\n  }\n\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  path(ctx, start, count) {\n    const segments = this.segments;\n\n    const segmentMethod = _getSegmentMethod(this);\n\n    let loop = this._loop;\n    start = start || 0;\n    count = count || this.points.length - start;\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n\n    return !!loop;\n  }\n\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n\n}\n\n_defineProperty(LineElement, \"id\", 'line');\n\n_defineProperty(LineElement, \"defaults\", {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n});\n\n_defineProperty(LineElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\n\n_defineProperty(LineElement, \"descriptors\", {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n});\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nclass PointElement extends Element {\n  /**\n  * @type {any}\n  */\n\n  /**\n  * @type {any}\n  */\n  constructor(cfg) {\n    super();\n\n    _defineProperty(this, \"parsed\", void 0);\n\n    _defineProperty(this, \"skip\", void 0);\n\n    _defineProperty(this, \"stop\", void 0);\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx, area) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {}; // @ts-expect-error Fallbacks should never be hit in practice\n\n    return options.radius + options.hitRadius;\n  }\n\n}\n\n_defineProperty(PointElement, \"id\", 'point');\n\n_defineProperty(PointElement, \"defaults\", {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n});\n\n_defineProperty(PointElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {\n      inflateAmount,\n      options: {\n        borderColor,\n        backgroundColor\n      }\n    } = this;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n\n}\n\n_defineProperty(BarElement, \"id\", 'bar');\n\n_defineProperty(BarElement, \"defaults\", {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n});\n\n_defineProperty(BarElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\n\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  BarElement: BarElement,\n  LineElement: LineElement,\n  PointElement: PointElement\n});\nconst BORDER_COLORS = ['rgb(54, 162, 235)', 'rgb(255, 99, 132)', 'rgb(255, 159, 64)', 'rgb(255, 205, 86)', 'rgb(75, 192, 192)', 'rgb(153, 102, 255)', 'rgb(201, 203, 207)' // grey\n]; // Border colors with 50% transparency\n\nconst BACKGROUND_COLORS = /* #__PURE__ */BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset, i) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset, i) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset, i) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n  return i;\n}\n\nfunction getColorizer(chart) {\n  let i = 0;\n  return (dataset, datasetIndex) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(descriptors) {\n  let k;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(descriptor) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nvar plugin_colors = {\n  id: 'colors',\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  },\n\n  beforeLayout(chart, _args, options) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {\n        datasets\n      },\n      options: chartOptions\n    } = chart.config;\n    const {\n      elements\n    } = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n    datasets.forEach(colorizer);\n  }\n\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n\n      let decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {\n      start,\n      end\n    } = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n\n  return parts;\n}\n\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property,\n    start,\n    end\n  };\n}\n\nfunction _pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({\n    start,\n    end\n  }) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    const point = points[end];\n\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n\n  return pixel;\n}\n\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  return value;\n}\n\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\n\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push(...postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first,\n    last,\n    point\n  };\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n\n}\n\nfunction _getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n\n  const value = _getTargetValue(fill, scale, start);\n\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n\n  fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {\n    segments,\n    points\n  } = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n\n  for (const segment of segments) {\n    const {\n      start,\n      end\n    } = segment;\n    const firstPoint = points[start];\n\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n\n    lineLoop = !!target.pathSegment(ctx, segment, {\n      move: lineLoop\n    });\n\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n\n  const segments = _segments(line, target, property);\n\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      loop = lineLoop && targetLoop;\n\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {\n      options,\n      ctx\n    } = this;\n\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n\n    const titleHeight = this._computeTitleHeight();\n\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const {\n        itemWidth,\n        itemHeight\n      } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      hitboxes[i] = {\n        left,\n        top: currentColHeight,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n\n    const titleHeight = this._computeTitleHeight();\n\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        },\n        rtl\n      }\n    } = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n\n    if (this.isHorizontal()) {\n      let row = 0;\n\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  _draw() {\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = this;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    const isHorizontal = this.isHorizontal();\n\n    const titleHeight = this._computeTitleHeight();\n\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor;\n      ctx.fillStyle = legendItem.fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  handleEvent(e) {\n    const opts = this.options;\n\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {\n    itemWidth,\n    itemHeight\n  };\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n\n  return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color,\n            useBorderRadius,\n            borderRadius\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n\n      maxWidth = bottom - top;\n    }\n\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  let widthPadding = 0;\n\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {\n    topLeft,\n    topRight,\n    bottomLeft,\n    bottomRight\n  } = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  beforeTitle: noop,\n\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n\n  afterTitle: noop,\n  beforeBody: noop,\n  beforeLabel: noop,\n\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n\n    const value = tooltipItem.formattedValue;\n\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n\n    return label;\n  },\n\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0\n    };\n  },\n\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation\n    };\n  },\n\n  afterLabel: noop,\n  afterBody: noop,\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n  }\n\n  getBody(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n  }\n\n  getFooter(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {\n        chart: this.chart,\n        tooltip: this,\n        replay\n      });\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      caretSize,\n      cornerRadius\n    } = options;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(cornerRadius);\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n\n      y3 = y1;\n    }\n\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {\n      body\n    } = this;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n\n      if (!position) {\n        return;\n      }\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    const positionChanged = this._positionChanged(active, e);\n\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      return lastActive;\n    }\n\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n\n}\n\n_defineProperty(Tooltip, \"positioners\", positioners);\n\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart,\n        options\n      });\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', { ...args,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Colors: plugin_colors,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n\n  return value;\n}\n\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n\n    if (added.length) {\n      const labels = this.getLabels();\n\n      for (const {\n        index,\n        label\n      } of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n\n      this._addedLabels = [];\n    }\n\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n\n}\n\n_defineProperty(CategoryScale, \"id\", 'category');\n\n_defineProperty(CategoryScale, \"defaults\", {\n  ticks: {\n    callback: _getLabelForValue\n  }\n});\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n\n      if (niceMin < min) {\n        j++;\n      }\n\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n\n    ticks.push({\n      value: tickValue\n    });\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {\n  horizontal,\n  minRotation\n}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {\n      beginAtZero\n    } = this.options;\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n    const tickFont = this._resolveTickFontOptions(0);\n\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n\n}\n\n_defineProperty(LinearScale, \"id\", 'linear');\n\n_defineProperty(LinearScale, \"defaults\", {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n});\n\nconst log10Floor = v => Math.floor(log10(v));\n\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n\n  return Math.min(rangeExp, log10Floor(min));\n}\n\nfunction generateTicks(generationOptions, {\n  min,\n  max\n}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n\n  while (value < max) {\n    ticks.push({\n      value,\n      major: isMajor(value),\n      significand\n    });\n\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(lastTick),\n    significand\n  });\n  return ticks;\n}\n\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n\n    if (max <= 0) {\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n\n    return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n\n}\n\n_defineProperty(LogarithmicScale, \"id\", 'logarithmic');\n\n_defineProperty(LogarithmicScale, \"defaults\", {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n});\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {\n    extra,\n    additionalAngle,\n    padding,\n    size\n  } = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    visible: true,\n    x: pointLabelPosition.x,\n    y,\n    textAlign,\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n\n  const {\n    left,\n    top,\n    right,\n    bottom\n  } = item;\n\n  const apexesInArea = _isPointInArea({\n    x: left,\n    y: top\n  }, area) || _isPointInArea({\n    x: left,\n    y: bottom\n  }, area) || _isPointInArea({\n    x: right,\n    y: top\n  }, area) || _isPointInArea({\n    x: right,\n    y: bottom\n  }, area);\n\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {\n    centerPointLabels,\n    display\n  } = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {\n    left,\n    top,\n    right,\n    bottom\n  } = item;\n  const {\n    backdropColor\n  } = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n\n    if (!item.visible) {\n      continue;\n    }\n\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign\n    } = item;\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels().map((value, index) => {\n      const label = callback(this.options.pointLabels.callback, [value, index], this);\n      return label || label === 0 ? label : '';\n    }).filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n\n  drawBackground() {\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = this.options;\n\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {\n      angleLines,\n      grid,\n      border\n    } = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  drawBorder() {}\n\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n\n  drawTitle() {}\n\n}\n\n_defineProperty(RadialLinearScale, \"id\", 'radialLinear');\n\n_defineProperty(RadialLinearScale, \"defaults\", {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n\n    callback(label) {\n      return label;\n    },\n\n    padding: 5,\n    centerPointLabels: false\n  }\n});\n\n_defineProperty(RadialLinearScale, \"defaultRoutes\", {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n});\n\n_defineProperty(RadialLinearScale, \"descriptors\", {\n  angleLines: {\n    _fallback: 'grid'\n  }\n});\n\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = /* #__PURE__ */Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n\n    return {\n      min,\n      max\n    };\n  }\n\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return callback(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n\n    const size = this._getLabelSize(exampleLabel);\n\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return this._cache.data = metas[0].controller.getAllParsedValues(this);\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return this._cache.data = this.normalize(timestamps);\n  }\n\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n  }\n\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n\n}\n\n_defineProperty(TimeScale, \"id\", 'time');\n\n_defineProperty(TimeScale, \"defaults\", {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    callback: false,\n    major: {\n      enabled: false\n    }\n  }\n});\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'pos', val));\n    }\n\n    ({\n      pos: prevSource,\n      time: prevTarget\n    } = table[lo]);\n    ({\n      pos: nextSource,\n      time: nextTarget\n    } = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'time', val));\n    }\n\n    ({\n      time: prevSource,\n      pos: prevTarget\n    } = table[lo]);\n    ({\n      time: nextSource,\n      pos: nextTarget\n    } = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  buildLookupTable(timestamps) {\n    const {\n      min,\n      max\n    } = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  }\n\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n\n}\n\n_defineProperty(TimeSeriesScale, \"id\", 'timeseries');\n\n_defineProperty(TimeSeriesScale, \"defaults\", TimeScale.defaults);\n\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","i","isObject","d","defaults","b","isArray","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","defined","s","sign","j","createContext","k","isNullOrUndef","_","_arrayUnique","t","toRadians","m","toPercentage","n","toDimension","T","TAU","o","formatNumber","p","_angleBetween","H","HALF_PI","P","PI","q","_getStartAndCountOfVisiblePoints","w","_scaleRangesChanged","x","isNumber","y","_parseObjectDataRadialScale","z","getRelativePosition","A","_rlookupByKey","B","_lookupByKey","C","_isPointInArea","D","getAngleFromPoint","E","toPadding","F","each","G","getMaximumSize","I","_getParentNode","J","readUsedSize","K","supportsEventListenerOptions","L","throttled","M","_isDomSupported","N","_factorize","O","finiteOrDefault","Q","callback","R","_addGrace","S","_limitValue","U","toDegrees","V","_measureText","W","_int16Range","X","_alignPixel","Y","clipArea","Z","renderText","$","unclipArea","a0","toFont","a1","_toLeftRightCenter","a2","_alignStartEnd","a3","overrides","a4","merge","a5","_capitalize","a6","descriptors","a7","isFunction","a8","_attachContext","a9","_createResolver","aa","_descriptors","ab","mergeIf","ac","uid","ad","debounce","ae","retinaScale","af","clearCanvas","ag","setsEqual","ah","_elementsEqual","ai","_isClickEvent","aj","_isBetween","ak","_readValueToProps","al","_updateBezierControlPoints","am","_computeSegments","an","_boundSegments","ao","_steppedInterpolation","ap","_bezierInterpolation","aq","_pointInLine","ar","_steppedLineTo","as","_bezierCurveTo","at","drawPoint","au","addRoundedRectPath","av","toTRBL","aw","toTRBLCorners","ax","_boundSegment","ay","_normalizeAngle","az","getRtlAdapter","aA","overrideTextDirection","aB","_textX","aC","restoreTextDirection","aD","drawPointLegend","aE","distanceBetweenPoints","aF","noop","aG","_setMinAndMaxByKey","aH","niceNum","aI","almostWhole","aJ","almostEquals","aK","_decimalPlaces","aL","Ticks","aM","log10","aN","_longestText","aO","_filterBetween","aP","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","call","window","_update","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","Object","keys","animation","animatedProps","getOwnPropertyNames","key","option","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","new","dataElementType","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","numbers","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","onClick","legendItem","toggleDataVisibility","LineController","line","_dataset","animationsDisabled","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","interaction","controllers","__proto__","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","align","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","title","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","hasFunction","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","onHover","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","plugin_colors","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","Colors","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","tickValue","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","formatters","numeric","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","significand","lastTick","LogarithmicScale","_zero","logarithmic","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["C:/Users/Влад/source/repos/Project26/Project26/ClientApp/node_modules/chart.js/dist/chart.js"],"sourcesContent":["/*!\n * Chart.js v4.3.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.3.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}